######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
######## Create variable for % of all assignments submitted late, missing, etc. ############
missingSummary <- missing %>%
group_by(SIS.Id) %>%
summarise(numMissing = n())
######## Create variable for % of all assignments submitted late, missing, etc. ############
missingSummary <- missing %>%
group_by(Random.Id) %>%
summarise(numMissing = n())
lateSummary <- late %>%
group_by(Random.Id) %>%
summarise(numLate = n())
studentSummary <- studentSummary %>%
left_join(missingSummary, by = "Random.Id") %>%
left_join(lateSummary, by = "Random.Id") %>%
mutate(numAssignmentsTot = 150,
numMissing = ifelse(is.na(numMissing), 0, numMissing),
pctMissing = numMissing / numAssignmentsTot,
numLate = ifelse(is.na(numLate), 0, numLate),
pctLate = numLate / numAssignmentsTot,
numNotOnTime = numMissing + numLate,
pctNotOnTime = numNotOnTime / numAssignmentsTot,
numOnTime = numAssignmentsTot - numNotOnTime,
pctOnTime = numOnTime / numAssignmentsTot) %>%
relocate(numAssignmentsTot, .before = numMissing)
View(missingSummary)
View(lateSummary)
View(studentSummary)
######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
######## Create variable for % of all assignments submitted late, missing, etc. ############
missingSummary <- missing %>%
group_by(Random.Id) %>%
summarise(numMissing = n())
lateSummary <- late %>%
group_by(Random.Id) %>%
summarise(numLate = n())
studentSummary <- studentSummary %>%
left_join(missingSummary, by = "Random.Id") %>%
left_join(lateSummary, by = "Random.Id") %>%
mutate(numAssignmentsTot = 150,
numMissing = ifelse(is.na(numMissing), 0, numMissing),
pctMissing = numMissing / numAssignmentsTot,
numLate = ifelse(is.na(numLate), 0, numLate),
pctLate = numLate / numAssignmentsTot,
numNotOnTime = numMissing + numLate,
pctNotOnTime = numNotOnTime / numAssignmentsTot,
numOnTime = numAssignmentsTot - numNotOnTime,
pctOnTime = numOnTime / numAssignmentsTot) %>%
relocate(c(numAssignmentsTot, numMissing, pctMissing), .before = numLate) %>%
######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
######## Create variable for % of all assignments submitted late, missing, etc. ############
missingSummary <- missing %>%
group_by(Random.Id) %>%
summarise(numMissing = n())
lateSummary <- late %>%
group_by(Random.Id) %>%
summarise(numLate = n())
studentSummary <- studentSummary %>%
left_join(missingSummary, by = "Random.Id") %>%
left_join(lateSummary, by = "Random.Id") %>%
mutate(numAssignmentsTot = 150,
numMissing = ifelse(is.na(numMissing), 0, numMissing),
pctMissing = numMissing / numAssignmentsTot,
numLate = ifelse(is.na(numLate), 0, numLate),
pctLate = numLate / numAssignmentsTot,
numNotOnTime = numMissing + numLate,
pctNotOnTime = numNotOnTime / numAssignmentsTot,
numOnTime = numAssignmentsTot - numNotOnTime,
pctOnTime = numOnTime / numAssignmentsTot) %>%
relocate(c(numAssignmentsTot, numMissing, pctMissing), .before = numLate)
######## Write cleaned F21 (Ashley) data to csv file ################
write.csv(studentSummary,paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"),row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
######## Create scatter plot (x vs y) function ############
scatter_plot <- function(title, xvar, yvar, ylim = c(0,100), model = NULL) {
p <- ggplot(studentSummary) +
# aesthetics
geom_point(aes_string(x = xvar, y = yvar)) +
geom_abline(intercept = coef(model)[1],
slope = coef(model)[2]) +
ylim(ylim) +
# title and label axes
ggtitle(paste(xvar,"vs",yvar)) +
xlab(xvar) +
ylab(yvar) +
# Font size
theme(title = element_text(size = 15),
text = element_text(size = 11),
axis.text.x = element_text(margin = margin(5,0,20,0)),
axis.text.y = element_text(margin = margin(0,5,0,20)),
plot.title = element_text(margin = margin(0,0,20,0), hjust = 0.5)) +
theme_classic()
ggsave(paste0(here(),"/Plots/Simple Regression/",title,".jpeg"))
}
######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
######## Create scatter plot (x vs y) function ############
scatter_plot <- function(title, xvar, yvar, ylim = c(0,100), model = NULL) {
p <- ggplot(studentSummary) +
# aesthetics
geom_point(aes_string(x = xvar, y = yvar)) +
geom_abline(intercept = coef(model)[1],
slope = coef(model)[2]) +
ylim(ylim) +
# title and label axes
ggtitle(paste(xvar,"vs",yvar)) +
xlab(xvar) +
ylab(yvar) +
# Font size
theme(title = element_text(size = 15),
text = element_text(size = 11),
axis.text.x = element_text(margin = margin(5,0,20,0)),
axis.text.y = element_text(margin = margin(0,5,0,20)),
plot.title = element_text(margin = margin(0,0,20,0), hjust = 0.5)) +
theme_classic()
ggsave(paste0(here(),"/Plots/Simple Regression/",title,".jpeg"))
}
######## Mean center predictor variables ############
studentSummary <- studentSummary %>%
mutate(across(c(Assignment.on.time.percent, pctOnTime, Page.Views, Participations), ~ .x - mean(.x), .names = "{.col}.c" ))
set_sum_contrasts()
library(tidyverse)
library(here)
library(tidyverse)
library(here)
library(afex)
install.packages(afex)
install.packages(lmer)
set_sum_contrasts()
install.packages("afex")
library(tidyverse)
library(here)
library(afex)
######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
######## Create scatter plot (x vs y) function ############
scatter_plot <- function(title, xvar, yvar, ylim = c(0,100), model = NULL) {
p <- ggplot(studentSummary) +
# aesthetics
geom_point(aes_string(x = xvar, y = yvar)) +
geom_abline(intercept = coef(model)[1],
slope = coef(model)[2]) +
ylim(ylim) +
# title and label axes
ggtitle(paste(xvar,"vs",yvar)) +
xlab(xvar) +
ylab(yvar) +
# Font size
theme(title = element_text(size = 15),
text = element_text(size = 11),
axis.text.x = element_text(margin = margin(5,0,20,0)),
axis.text.y = element_text(margin = margin(0,5,0,20)),
plot.title = element_text(margin = margin(0,0,20,0), hjust = 0.5)) +
theme_classic()
ggsave(paste0(here(),"/Plots/Simple Regression/",title,".jpeg"))
}
######## Mean center predictor variables ############
studentSummary <- studentSummary %>%
mutate(across(c(Assignment.on.time.percent, pctOnTime, Page.Views, Participations), ~ .x - mean(.x), .names = "{.col}.c" ))
set_sum_contrasts()
######## Create models with Overall.course.grade as DV ############
# Without mean centered predictors, for plotting only
m.1.Ovr <- lm(Overall.course.grade ~ pctOnTime,  data = studentSummary)
m.1b.Ovr <- lm(Overall.course.grade ~ Assignment.on.time.percent,  data = studentSummary)
m.2.Ovr <- lm(Overall.course.grade ~ Page.Views,  data = studentSummary)
m.3.Ovr <- lm(Overall.course.grade ~ Participations,  data = studentSummary)
# With mean centered predictors, for interpretation
m.1.Ovr.c <- lm(Overall.course.grade ~ pctOnTime.c,  data = studentSummary)
summary(m.1.Ovr.c)
m.1b.Ovr.c <- lm(Overall.course.grade ~ Assignment.on.time.percent,  data = studentSummary)
summary(m.1b.Ovr.c)
m.2.Ovr.c <- lm(Overall.course.grade ~ Page.Views.c,  data = studentSummary)
summary(m.2.Ovr.c)
m.3.Ovr.c <- lm(Overall.course.grade ~ Participations.c,  data = studentSummary)
summary(m.3.Ovr.c)
m.4.Ovr.c <- lm(Overall.course.grade ~ pctOnTime.c * Page.Views.c * Participations.c,  data = studentSummary)
summary(m.4.Ovr.c)
######## Create models with Final.Exam.Score as DV ############
# Without mean centered predictors, for plotting only
m.1.Final <- lm(Final.Exam.Score ~ pctOnTime,  data = studentSummary)
m.1b.Final <- lm(Final.Exam.Score ~ Assignment.on.time.percent,  data = studentSummary)
m.2.Final <- lm(Final.Exam.Score ~ Page.Views,  data = studentSummary)
m.3.Final <- lm(Final.Exam.Score ~ Participations,  data = studentSummary)
# With mean centered predictors, for interpretation
m.1.Final.c <- lm(Final.Exam.Score ~ pctOnTime.c,  data = studentSummary)
summary(m.1.Final.c)
m.1b.Final.c <- lm(Final.Exam.Score ~ Assignment.on.time.percent,  data = studentSummary)
summary(m.1b.Final.c)
m.2.Final.c <- lm(Final.Exam.Score ~ Page.Views.c,  data = studentSummary)
summary(m.2.Final.c)
m.3.Final.c <- lm(Final.Exam.Score ~ Participations.c,  data = studentSummary)
summary(m.3.Final.c)
m.4.Final.c <- lm(Final.Exam.Score ~ pctOnTime.c * Page.Views.c * Participations.c,  data = studentSummary)
summary(m.4.Final.c)
######## Mean center predictor variables ############
studentSummary <- studentSummary %>%
mutate(across(c(Assignment.on.time.percent, pctOnTime, Page.Views, Participations), ~ .x - mean(.x), .names = "{.col}.c" ))
set_sum_contrasts()
######## Create models with Overall.course.grade as DV ############
# Without mean centered predictors, for plotting only
m.1.Ovr <- lm(Overall.course.grade ~ pctOnTime,  data = studentSummary)
m.1b.Ovr <- lm(Overall.course.grade ~ Assignment.on.time.percent,  data = studentSummary)
m.2.Ovr <- lm(Overall.course.grade ~ Page.Views,  data = studentSummary)
m.3.Ovr <- lm(Overall.course.grade ~ Participations,  data = studentSummary)
# With mean centered predictors, for interpretation
m.1.Ovr.c <- lm(Overall.course.grade ~ pctOnTime.c,  data = studentSummary)
summary(m.1.Ovr.c)
m.1b.Ovr.c <- lm(Overall.course.grade ~ Assignment.on.time.percent,  data = studentSummary)
# summary(m.1b.Ovr.c)
m.2.Ovr.c <- lm(Overall.course.grade ~ Page.Views.c,  data = studentSummary)
summary(m.2.Ovr.c)
m.3.Ovr.c <- lm(Overall.course.grade ~ Participations.c,  data = studentSummary)
summary(m.3.Ovr.c)
m.4.Ovr.c <- lm(Overall.course.grade ~ pctOnTime.c * Page.Views.c * Participations.c,  data = studentSummary)
summary(m.4.Ovr.c)
######## Create models with Final.Exam.Score as DV ############
# Without mean centered predictors, for plotting only
m.1.Final <- lm(Final.Exam.Score ~ pctOnTime,  data = studentSummary)
m.1b.Final <- lm(Final.Exam.Score ~ Assignment.on.time.percent,  data = studentSummary)
m.2.Final <- lm(Final.Exam.Score ~ Page.Views,  data = studentSummary)
m.3.Final <- lm(Final.Exam.Score ~ Participations,  data = studentSummary)
# With mean centered predictors, for interpretation
m.1.Final.c <- lm(Final.Exam.Score ~ pctOnTime.c,  data = studentSummary)
summary(m.1.Final.c)
m.1b.Final.c <- lm(Final.Exam.Score ~ Assignment.on.time.percent,  data = studentSummary)
# summary(m.1b.Final.c)
m.2.Final.c <- lm(Final.Exam.Score ~ Page.Views.c,  data = studentSummary)
summary(m.2.Final.c)
m.3.Final.c <- lm(Final.Exam.Score ~ Participations.c,  data = studentSummary)
summary(m.3.Final.c)
m.4.Final.c <- lm(Final.Exam.Score ~ pctOnTime.c * Page.Views.c * Participations.c,  data = studentSummary)
summary(m.4.Final.c)
######## Add model predictions to dataset ############
# studentSummary <- studentSummary %>%
#   mutate(m.1.Ovr.pred = predict(m.1.Ovr),
#          m.2.Ovr.pred = predict(m.2.Ovr),
#          m.3.Ovr.pred = predict(m.3.Ovr))
######## Scatter plots of key variables vs. overall course grade ############
scatter_plot(title = "REG On time pct (new) vs overall grade", xvar = "pctOnTime",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.1.Ovr)
scatter_plot(title = "REG On time pct (old) vs overall grade", xvar = "Assignment.on.time.percent",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.1b.Ovr)
scatter_plot(title = "REG Page view vs overall grade", xvar = "Page.Views",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.2.Ovr)
scatter_plot(title = "REG Participations vs overall grade", xvar = "Participations",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.3.Ovr)
######## Add model predictions to dataset ############
# studentSummary <- studentSummary %>%
#   mutate(m.1.Final.pred = predict(m.1.Final),
#          m.2.Final.pred = predict(m.2.Final),
#          m.3.Final.pred = predict(m.3.Final))
######## Scatter plots of key variables vs. overall course grade ############
scatter_plot(title = "REG On time pct (new) vs final exam grade", xvar = "pctOnTime",
yvar = "Final.Exam.Score", ylim = c(50,100), model = m.1.Final)
scatter_plot(title = "REG On time pct (old) vs final exam grade", xvar = "Assignment.on.time.percent",
yvar = "Final.Exam.Score", ylim = c(50,100), model = m.1b.Final)
scatter_plot(title = "REG Page view vs final exam grade", xvar = "Page.Views",
yvar = "Final.Exam.Score", ylim = c(50,100), model = m.2.Final)
scatter_plot(title = "REG Participations vs final exam grade", xvar = "Participations",
yvar = "Final.Exam.Score", ylim = c(50,100), model = m.3.Final)
######## Create models with Final.Exam.Score as DV ############
# Without mean centered predictors, for plotting only
m.1.Final <- lm(Final.Exam.Score ~ pctOnTime,  data = studentSummary)
m.1b.Final <- lm(Final.Exam.Score ~ Assignment.on.time.percent,  data = studentSummary)
m.2.Final <- lm(Final.Exam.Score ~ Page.Views,  data = studentSummary)
m.3.Final <- lm(Final.Exam.Score ~ Participations,  data = studentSummary)
# With mean centered predictors, for interpretation
m.1.Final.c <- lm(Final.Exam.Score ~ pctOnTime.c,  data = studentSummary)
summary(m.1.Final.c)
m.1b.Final.c <- lm(Final.Exam.Score ~ Assignment.on.time.percent,  data = studentSummary)
# summary(m.1b.Final.c)
m.2.Final.c <- lm(Final.Exam.Score ~ Page.Views.c,  data = studentSummary)
summary(m.2.Final.c)
m.3.Final.c <- lm(Final.Exam.Score ~ Participations.c,  data = studentSummary)
summary(m.3.Final.c)
m.4.Final.c <- lm(Final.Exam.Score ~ pctOnTime.c * Page.Views.c * Participations.c,  data = studentSummary)
summary(m.4.Final.c)
knitr::opts_chunk$set(echo = TRUE)
######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
######## Histogram plotting function ############
plot_histogram <- function(xvar, binwidth) {
p <- ggplot(studentSummary) +
# aesthetics
geom_histogram(aes_string(x = xvar), binwidth = binwidth, color = "blue", fill = "blue", alpha = .5) +
# title and label axes
ggtitle(paste("Distribution of", xvar)) +
xlab(xvar) +
# Font size
theme(title = element_text(size = 15),
text = element_text(size = 11),
axis.text.x = element_text(margin = margin(5,0,20,0)),
axis.text.y = element_text(margin = margin(0,5,0,20)),
plot.title = element_text(margin = margin(0,0,20,0), hjust = 0.5)) +
theme_classic()
ggsave(paste0(here(),"/Plots/Descriptive Stats/Distribution of ",xvar,".jpeg"))
}
######## Histograms for distribution of each variable ############
plot_histogram(xvar = "Overall.course.grade", binwidth = 5)
plot_histogram(xvar = "Final.Exam.Grade", binwidth = 5)
plot_histogram(xvar = "Final.Exam.Score", binwidth = 5)
######## Create scatter plot (x vs y) function ############
scatter_plot <- function(title, xvar, yvar, ylim = c(0,100), model = NULL) {
p <- ggplot(studentSummary) +
# aesthetics
geom_point(aes_string(x = xvar, y = yvar)) +
geom_abline(intercept = coef(model)[1],
slope = coef(model)[2]) +
ylim(ylim) +
# title and label axes
ggtitle(paste(xvar,"vs",yvar)) +
xlab(xvar) +
ylab(yvar) +
# Font size
theme(title = element_text(size = 16),
text = element_text(size = 12),
axis.text.x = element_text(size = 12, margin = margin(5,0,20,0)),
axis.text.y = element_text(size = 12, margin = margin(0,5,0,20)),
plot.title = element_text(margin = margin(0,0,20,0), hjust = 0.5)) +
theme_classic()
ggsave(paste0(here(),"/Plots/Simple Regression/",title,".jpeg"))
}
######## Create scatter plot (x vs y) function ############
scatter_plot <- function(title, xvar, yvar, ylim = c(0,100), model = NULL) {
p <- ggplot(studentSummary) +
# aesthetics
geom_point(aes_string(x = xvar, y = yvar)) +
geom_abline(intercept = coef(model)[1],
slope = coef(model)[2]) +
ylim(ylim) +
# title and label axes
ggtitle(paste(xvar,"vs",yvar)) +
xlab(xvar) +
ylab(yvar) +
# Font size
theme(text = element_text(size = 12),
axis.text.x = element_text(size = 12, margin = margin(5,0,20,0)),
axis.text.y = element_text(size = 12, margin = margin(0,5,0,20)),
plot.title = element_text(size = 16, margin = margin(0,0,20,0), hjust = 0.5)) +
theme_classic()
ggsave(paste0(here(),"/Plots/Simple Regression/",title,".jpeg"))
}
######## Add model predictions to dataset ############
# studentSummary <- studentSummary %>%
#   mutate(m.1.Ovr.pred = predict(m.1.Ovr),
#          m.2.Ovr.pred = predict(m.2.Ovr),
#          m.3.Ovr.pred = predict(m.3.Ovr))
######## Scatter plots of key variables vs. overall course grade ############
scatter_plot(title = "REG On time pct (new) vs overall grade", xvar = "pctOnTime",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.1.Ovr)
scatter_plot(title = "REG On time pct (old) vs overall grade", xvar = "Assignment.on.time.percent",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.1b.Ovr)
scatter_plot(title = "REG Page view vs overall grade", xvar = "Page.Views",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.2.Ovr)
scatter_plot(title = "REG Participations vs overall grade", xvar = "Participations",
yvar = "Overall.course.grade", ylim = c(50,100), model = m.3.Ovr)
######## Histogram plotting function ############
plot_histogram <- function(xvar, binwidth) {
p <- ggplot(studentSummary) +
# aesthetics
geom_histogram(aes_string(x = xvar), binwidth = binwidth, color = "blue", fill = "blue", alpha = .5) +
# title and label axes
ggtitle(paste("Distribution of", xvar)) +
xlab(xvar) +
# Font size
theme(text = element_text(size = 12),
axis.text.x = element_text(size = 12, margin = margin(5,0,20,0)),
axis.text.y = element_text(size = 12, margin = margin(0,5,0,20)),
plot.title = element_text(size = 16, margin = margin(0,0,20,0), hjust = 0.5)) +
theme_classic()
ggsave(paste0(here(),"/Plots/Descriptive Stats/Distribution of ",xvar,".jpeg"))
}
######## Histograms for distribution of each variable ############
plot_histogram(xvar = "Overall.course.grade", binwidth = 5)
plot_histogram(xvar = "Final.Exam.Score", binwidth = 5)
plot_histogram(xvar = "pctOnTime", binwidth = .05)
plot_histogram(xvar = "Page.Views", binwidth = 100)
plot_histogram(xvar = "Participations", binwidth = 10)
######## Read in F21 Data ############
studentSummary <- read.csv(paste0(here(),"/raw_data/F21/studentSummary.csv"), header = TRUE) # N = 181
late <- read.csv(paste0(here(),"/raw_data/F21/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/raw_data/F21/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/raw_data/F21/gradebook.csv"), header = TRUE) # N = 178 (why?)
######## Read in F21 Data ############
studentSummary <- read.csv(paste0(here(),"/raw_data/F21/studentSummary.csv"), header = TRUE) # N = 181
late <- read.csv(paste0(here(),"/raw_data/F21/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/raw_data/F21/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/raw_data/F21/gradebook.csv"), header = TRUE) # N = 178 (why?)
set.seed(123)
studentSummary = studentSummary[sample(1:nrow(studentSummary)), ]
rownames(studentSummary) <- 1:nrow(studentSummary)  # reset row index
studentSummary <- studentSummary %>%
rename(Student.Name = Sortable.name) %>%
mutate(Random.Id=row_number()) %>%
select(Student.Name, Random.Id, Overall.course.grade, Assignment.on.time.percent, Page.Views, Participations)
grades <- grades %>%
rename(Student.Name = Student)
######## Join to late assignments and remove identifying info ############
late <- late %>%
inner_join(studentSummary, by = "Student.Name") %>%
select(Random.Id, Assignment.Name, Points.Possible, Due.Date, Unlocked.Date, Submitted.Date,
Overall.course.grade, Assignment.on.time.percent, Page.Views, Participations)
######## Join to missing assignments and remove identifying info ############
missing <- missing %>%
inner_join(studentSummary, by = "Student.Name") %>%
select(Random.Id, Assignment.Name, Points.Possible, Due.Date, Unlocked.Date,
Overall.course.grade, Assignment.on.time.percent, Page.Views, Participations)
######## Join to grade book and remove identifying info ############
# TODO Why are there more students in summary than in grade book?
grades <- grades %>%
inner_join(studentSummary, by = "Student.Name") %>%
select(!c(Student.Name:Section)) %>%
select(Random.Id, everything())
set.seed(123)
studentSummary = studentSummary[sample(1:nrow(studentSummary)), ]
rownames(studentSummary) <- 1:nrow(studentSummary)  # reset row index
studentSummary <- studentSummary %>%
rename(Student.Name = Sortable.name) %>%
mutate(Random.Id=row_number()) %>%
select(Student.Name, Random.Id, Overall.course.grade, Assignment.on.time.percent, Page.Views, Participations)
######## Read in F21 Data ############
studentSummary <- read.csv(paste0(here(),"/raw_data/F21/studentSummary.csv"), header = TRUE) # N = 181
late <- read.csv(paste0(here(),"/raw_data/F21/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/raw_data/F21/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/raw_data/F21/gradebook.csv"), header = TRUE) # N = 178 (why?)
set.seed(123)
studentSummary = studentSummary[sample(1:nrow(studentSummary)), ]
rownames(studentSummary) <- 1:nrow(studentSummary)  # reset row index
studentSummary <- studentSummary %>%
rename(Student.Name = Sortable.name) %>%
mutate(Random.Id=row_number()) %>%
select(Student.Name, Random.Id, Overall.course.grade, Assignment.on.time.percent, Page.Views, Participations)
grades <- grades %>%
rename(Student.Name = Student)
######## Join to late assignments and remove identifying info ############
late <- late %>%
inner_join(studentSummary, by = "Student.Name") %>%
select(Random.Id, Assignment.Name, Points.Possible, Due.Date, Unlocked.Date, Submitted.Date,
Overall.course.grade, Assignment.on.time.percent, Page.Views, Participations)
######## Join to missing assignments and remove identifying info ############
missing <- missing %>%
inner_join(studentSummary, by = "Student.Name") %>%
select(Random.Id, Assignment.Name, Points.Possible, Due.Date, Unlocked.Date,
Overall.course.grade, Assignment.on.time.percent, Page.Views, Participations)
######## Join to grade book and remove identifying info ############
# TODO Why are there more students in summary than in grade book?
grades <- grades %>%
inner_join(studentSummary, by = "Student.Name")
setdiff(studentSummary$Student.Name, grades$Student.Name)
View(grades)
View(grades)
tmp <- grades %>% select(starts_with('Final'))
View(tmp)
View(tmp)
######## Read in F21 (Ashley) Data ############
studentSummary <- read.csv(paste0(here(),"/clean_data/F21_Ashley/studentSummary.csv"), header = TRUE)
late <- read.csv(paste0(here(),"/clean_data/F21_Ashley/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/clean_data/F21_Ashley/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/clean_data/F21_Ashley/gradebook.csv"), header = TRUE)
View(studentSummary)
View(late)
View(late)
View(grades)
tmp <- grades %>% select(starts_with('Final'))
View(tmp)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
######## Read in F21 Data ############
studentSummary <- read.csv(paste0(here(),"/raw_data/F21/studentSummary.csv"), header = TRUE) # N = 181
late <- read.csv(paste0(here(),"/raw_data/F21/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/raw_data/F21/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/raw_data/F21/gradebook.csv"), header = TRUE) # N = 178 (why?)
######## Read in F21 Data ############
studentSummary <- read.csv(paste0(here(),"/raw_data/F21/studentSummary.csv"), header = TRUE) # N = 181
late <- read.csv(paste0(here(),"/raw_data/F21/lateAssignments.csv"), header = TRUE)
missing <- read.csv(paste0(here(),"/raw_data/F21/missingAssignments.csv"), header = TRUE)
grades <- read.csv(paste0(here(),"/raw_data/F21/gradebook.csv"), header = TRUE) # N = 178 (why?)
assignments <- read.csv(paste0(here(),"/raw_data/psyc_students_report.csv"), header = TRUE) # N = 181
View(assignments)
unique(assignments$ASSIGNMENT_ID)
options(digits=30)
options(digits=2)
options(digits=22)
unique(assignments$ASSIGNMENT_ID)
assignments$ASSIGNMENT_ID[1]
